DEFAULT_MAX_NAMELENGTH = 100
// Categories Module
entity Categories {	
    name String required maxlength(DEFAULT_MAX_NAMELENGTH),
    byDefault Boolean,
    createdAt LocalDate,
    updatedAt LocalDate 
}

entity SubCategories {	
    name String required maxlength(DEFAULT_MAX_NAMELENGTH),
    byDefault Boolean,
    createdAt LocalDate,
    updatedAt LocalDate
}

// Users 
entity MembersGroup {
	invitationAccepted Boolean,
    createdAt LocalDate,
    updatedAt LocalDate
}

entity UsersGroup {	
    name String,
    createdAt LocalDate,
    updatedAt LocalDate
}

entity UserGroupCategories {
	name String,
    createdAt LocalDate,
    updatedAt LocalDate
}


// Account Module
entity Accounts {
	description String,    
	createdAt LocalDate,
    updatedAt LocalDate
}

entity UserGroupAccount {	
	activeBalance BigDecimal,
    passiveBalance BigDecimal,
    createdAt LocalDate,
    updatedAt LocalDate
}

// Movementes
entity MovementesOutgoings {	
    totalValue BigDecimal,
    createdAt LocalDate,
    updatedAt LocalDate
}

entity ActiveDebts {	
    totalValue BigDecimal,
    createdAt LocalDate
}



relationship OneToOne {	
	// Users Module
    UsersGroup{userOwner} to User,
    UserGroupCategories{userGroup} to UsersGroup,
    UserGroupCategories{category} to Categories,    
    MembersGroup{userInvited} to User,     
    // Account Module
    Accounts{usrGroup} to UsersGroup,  
    UserGroupAccount{usrGroup} to UsersGroup,
    UserGroupAccount{account} to Accounts,
    MovementesOutgoings{userGroupAccount} to UserGroupAccount,
    MovementesOutgoings{subCategory} to SubCategories,    
    ActiveDebts{debtor} to UsersGroup,
    ActiveDebts{creditor} to UsersGroup,
    ActiveDebts{subCategory} to SubCategories,
    ActiveDebts{movementOutgoing} to MovementesOutgoings
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {	
    Categories{subCategories} to SubCategories{category},
    UsersGroup{members} to MembersGroup
}

// Set pagination options
paginate SubCategories, Categories with infinite-scroll
paginate SubCategories with pagination
paginate Categories with pagination

// Skip Angular Components


// Set service options to all except few
service * with serviceImpl

dto * with mapstruct

// Set an angular suffix
// angularSuffix * with JBH